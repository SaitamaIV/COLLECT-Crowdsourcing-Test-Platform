{"remainingRequest":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\picturesque\\Desktop\\frontend-collect\\src\\utils\\http.js","dependencies":[{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\src\\utils\\http.js","mtime":1648204762725},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\babel.config.js","mtime":1648202514567},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCByb3V0ZXIgZnJvbSAnQC9yb3V0ZXIvcm91dGVyLXN0YXRpYyc7CmltcG9ydCBzdG9yYWdlIGZyb20gJ0AvdXRpbHMvc3RvcmFnZSc7CnZhciBodHRwID0gYXhpb3MuY3JlYXRlKHsKICB0aW1lb3V0OiAxMDAwICogODY0MDAsCiAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLAogIC8v5LiL5LiA6KGM5pu/5o2i55So5LqOTW9jayzmraPluLjmg4XlhrXmm7/mjaLlm57mnaXljbPlj68KICAvLyBiYXNlVVJMOiAnL2NvbGxlY3QnLAogIGJhc2VVUkw6ICcgaHR0cHM6Ly9tb2NrLnByZXNzdGltZS5jbi9tb2NrLzYyMWY4MjNkYTk3NzQxMDAxNmFhYWU1NCcsCiAgaGVhZGVyczogewogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JwogIH0KfSk7IC8vIOivt+axguaLpuaIqgoKaHR0cC5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIGNvbmZpZy5oZWFkZXJzWydUb2tlbiddID0gc3RvcmFnZS5nZXQoJ1Rva2VuJyk7IC8vIOivt+axguWktOW4puS4inRva2VuCgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyDlk43lupTmi6bmiKoKCmh0dHAuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICBpZiAocmVzcG9uc2UuZGF0YSAmJiByZXNwb25zZS5kYXRhLmNvZGUgPT09IDQwMSkgewogICAgLy8gNDAxLCB0b2tlbuWkseaViAogICAgcm91dGVyLnB1c2goewogICAgICBuYW1lOiAnbG9naW4nCiAgICB9KTsKICB9CgogIHJldHVybiByZXNwb25zZTsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IGh0dHA7"},{"version":3,"sources":["C:/Users/picturesque/Desktop/frontend-collect/src/utils/http.js"],"names":["axios","router","storage","http","create","timeout","withCredentials","baseURL","headers","interceptors","request","use","config","get","error","Promise","reject","response","data","code","push","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,IAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,OAAO,KADM;AAEtBC,EAAAA,eAAe,EAAE,IAFK;AAGtB;AACA;AACAC,EAAAA,OAAO,EAAC,0DALc;AAMtBC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AANa,CAAb,CAAb,C,CAUA;;AACAL,IAAI,CAACM,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,UAAAC,MAAM,EAAI;AACpCA,EAAAA,MAAM,CAACJ,OAAP,CAAe,OAAf,IAA0BN,OAAO,CAACW,GAAR,CAAY,OAAZ,CAA1B,CADoC,CACW;;AAC/C,SAAOD,MAAP;AACH,CAHD,EAGG,UAAAE,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CALD,E,CAMA;;AACAX,IAAI,CAACM,YAAL,CAAkBQ,QAAlB,CAA2BN,GAA3B,CAA+B,UAAAM,QAAQ,EAAI;AACvC,MAAIA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,GAA5C,EAAiD;AAAE;AAC/ClB,IAAAA,MAAM,CAACmB,IAAP,CAAY;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAZ;AACH;;AACD,SAAOJ,QAAP;AACH,CALD,EAKG,UAAAH,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD;AAQA,eAAeX,IAAf","sourcesContent":["import axios from 'axios'\r\nimport router from '@/router/router-static'\r\nimport storage from '@/utils/storage'\r\n\r\nconst http = axios.create({\r\n    timeout: 1000 * 86400,\r\n    withCredentials: true,\r\n    //下一行替换用于Mock,正常情况替换回来即可\r\n    // baseURL: '/collect',\r\n    baseURL:' https://mock.presstime.cn/mock/621f823da977410016aaae54',\r\n    headers: {\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    }\r\n})\r\n// 请求拦截\r\nhttp.interceptors.request.use(config => {\r\n    config.headers['Token'] = storage.get('Token') // 请求头带上token\r\n    return config\r\n}, error => {\r\n    return Promise.reject(error)\r\n})\r\n// 响应拦截\r\nhttp.interceptors.response.use(response => {\r\n    if (response.data && response.data.code === 401) { // 401, token失效\r\n        router.push({ name: 'login' })\r\n    }\r\n    return response\r\n}, error => {\r\n    return Promise.reject(error)\r\n})\r\nexport default http"]}]}