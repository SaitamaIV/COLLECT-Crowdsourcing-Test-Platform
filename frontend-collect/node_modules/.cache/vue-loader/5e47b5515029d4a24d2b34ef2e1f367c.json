{"remainingRequest":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\picturesque\\Desktop\\frontend-collect\\src\\components\\common\\MyCropper.vue?vue&type=template&id=38b6af8d&scoped=true&","dependencies":[{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\src\\components\\common\\MyCropper.vue","mtime":1653413261438},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653401020224},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1653401043280},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1653401020224},{"path":"C:\\Users\\picturesque\\Desktop\\frontend-collect\\node_modules\\vue-loader\\lib\\index.js","mtime":1653401043277}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}